<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="group">

	<select id="selectMyList" parameterType="string"
		resultType="GroupMylistDto">
		SELECT SGROUP_ID, SGROUP_NAME, SGROUP_IMG_PATH,
		SGROUP_IMG_NAME FROM SGROUP
		WHERE SGROUP_ID IN
		(SELECT SGROUP_ID
		FROM
		SGROUP_MEMBER
		WHERE
		SGROUP_MEM_ID = #{memberId})
	</select>

	<select id="selectMyCount" parameterType="string"
		resultType="_int">
		SELECT COUNT(*) FROM SGROUP_MEMBER
		WHERE SGROUP_MEM_ID =
		#{memberId}
	</select>

	<select id="selectAllOpenList" parameterType="map"
		resultType="GroupDto">
		SELECT S.SGROUP_ID, S.SGROUP_NAME, S.SGROUP_OPEN,
		S.SGROUP_PWD, S.SGROUP_EXPLAIN, S.SGROUP_IMG_PATH, S.SGROUP_IMG_NAME
		FROM (SELECT ROWNUM, SGROUP.* FROM SGROUP WHERE
		SGROUP_OPEN = '0')
		S
		WHERE ROWNUM BETWEEN #{startRounum} AND #{endRounum}
	</select>

	<select id="selectRandList" resultType="GroupDto">
		SELECT * FROM (
		SELECT
		* FROM SGROUP ORDER BY DBMS_RANDOM.RANDOM
		)
		WHERE
		ROWNUM <![CDATA[<=]]>
		20
	</select>

	<select id="selectFindList" parameterType="string"
		resultType="GroupDto">
		SELECT * FROM SGROUP WHERE SGROUP_NAME LIKE '%${findName}%'
	</select>

	<select id="selectAllList" resultType="GroupDto">
		SELECT * FROM SGROUP
	</select>

	<insert id="insert" parameterType="GroupCreateDto">
		INSERT ALL
		INTO SGROUP VALUES
		(SEQ_SGROUP_ID.nextval, #{sgroupName},
		#{sgroupOpen},#{sgroupPwd},#{sgroupEx},#{sgroupImgPath},#{sgroupImgName})
		INTO SGROUP_MEMBER VALUES (SEQ_SGROUP_ID.nextval, #{sgroupWriter})
		SELECT *
		FROM DUAL
	</insert>

	<select id="selectGroupInfoList" parameterType="_int"
		resultType="GroupInfoListDto">
		SELECT * FROM SGROUP
		JOIN SGROUP_MEMBER USING (SGROUP_ID)
		WHERE SGROUP_ID = ${groupId}
	</select>

	<select id="selectGroupInfoOne" parameterType="_int"
		resultType="GroupDto">
		SELECT * FROM SGROUP
		WHERE SGROUP_ID = ${groupId}
	</select>

	<resultMap id="recordSumResultMap" type="GroupRecordSumDto">
		<result property="MEM_ID" column="memId" />
		<result property="SUM_MIN" column="sumMin" />
	</resultMap>

	<select id="selectGroupRecordSumList" parameterType="_int"
		resultMap="recordSumResultMap">
		SELECT
		S.SGROUP_MEM_ID AS "MEM_ID",
		NUMTODSINTERVAL( SUM(R.RECORD_END - R.RECORD_START) ,'DAY') AS "SUM_MIN"
		FROM SGROUP_MEMBER S
		JOIN RECORD R ON (S.SGROUP_MEM_ID = R.RECORD_MEM_ID)
		WHERE R.RECORD_START >= ( SYSDATE - 7 ) AND SGROUP_ID = #{GROUPID}
		GROUP BY S.SGROUP_MEM_ID
	</select>

	<!-- <select id="test" parameterType="string" resultType="_int"> SELECT 
		ROUND(SUM(TO_NUMBER(TO_CHAR(RECORD_END, 'HH24MISS')) - TO_NUMBER(TO_CHAR(RECORD_START, 
		'HH24MISS'))) / 100) FROM RECORD WHERE RECORD_START >= ( SYSDATE - 7 ) AND 
		RECORD_MEM_ID = #{memId} </select> -->

	<update id="update" parameterType="GroupUpdateDto">
		UPDATE SGROUP SET SGROUP_NAME
		= #{sgroupName}, SGROUP_OPEN = #{sgroupOpen}, SGROUP_PWD =
		#{sgroupPwd},
		SGROUP_EXPLAIN = #{sgroupEx}, SGROUP_IMG_PATH =
		#{sgroupImgPath}, SGROUP_IMG_NAME= #{sgroupImgName}
		WHERE SGROUP_ID =
		#{sgroupId}
	</update>

	<update id="updateMin" parameterType="GroupUpdateMinDto">
		UPDATE SGROUP SET
		SGROUP_NAME = #{sgroupName}, SGROUP_OPEN = #{sgroupOpen}, SGROUP_PWD =
		#{sgroupPwd},
		SGROUP_EXPLAIN = #{sgroupEx}
		WHERE SGROUP_ID = #{sgroupId}
	</update>


</mapper>
